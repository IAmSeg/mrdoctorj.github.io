{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["Post","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","props","theme","colors","white","light","shadow","suggestion","name","styles","_ref","data","pageContext","post","next","prev","markdownRemark","image","frontmatter","cover","childImageSharp","fluid","imageSrc","title","price","carry","sortOrder","isCarryAvailable","html","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","layouts__WEBPACK_IMPORTED_MODULE_6__","components__WEBPACK_IMPORTED_MODULE_7__","description","excerpt","pathname","path","article","carryPrice","className","src","input","weapon","propTypes","PropTypes","shape","object","isRequired","query"],"mappings":"+MA2BMA,UAlBgBC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,YAAGF,CAAH,0EAIH,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,OAJ/B,eAKH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,YALzB,oDAYIT,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,YAAGF,CAAH,CAAAU,KAAA,UAAAC,OAAA,6DAMP,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAEdC,GADiBD,EAAfE,KAAeF,EAATG,KACDJ,EAAKK,gBACZC,EAAQJ,EAAKK,YAAYC,MAAMC,gBAAgBC,MAC/CC,EAAWT,EAAKK,YAAYC,MAC5BI,EAAQV,EAAKK,YAAYK,MACzBC,EAAQX,EAAKK,YAAYM,MAEzBC,GADYZ,EAAKK,YAAYQ,UACrBb,EAAKK,YAAYS,kBACzBC,EAAOf,EAAKe,KAClB,OACE9B,OAAA+B,EAAA,EAAA/B,CAACgC,EAAA,EAAD,KACEhC,OAAA+B,EAAA,EAAA/B,CAACiC,EAAA,EAAD,CACER,MAAOA,EACPS,YAAanB,EAAKK,YAAYc,aAAenB,EAAKoB,SAAW,IAC7DhB,MAAOA,EACPiB,SAAUrB,EAAKK,YAAYiB,KAC3BT,UAAWb,EAAKK,YAAYQ,UAC5BU,SAAO,IAETtC,OAAA+B,EAAA,EAAA/B,CAACiC,EAAA,EAAD,CAAQR,MAAOA,EAAOC,MAAOA,EAAOL,MAAOF,EAAOoB,WAAoB,IAARb,IAC9D1B,OAAA+B,EAAA,EAAA/B,CAACgC,EAAA,EAAD,KACEhC,OAAA+B,EAAA,EAAA/B,CAAA,OAAKwC,UAAU,IACbxC,OAAA+B,EAAA,EAAA/B,CAACiC,EAAA,EAAD,CAAYQ,IAAKjB,KAEnBxB,OAAA+B,EAAA,EAAA/B,CAAA,WACEA,OAAA+B,EAAA,EAAA/B,CAACgC,EAAA,EAAD,CAASU,MAAOZ,KAElB9B,OAAA+B,EAAA,EAAA/B,CAACiC,EAAA,EAAD,CAAWU,OAAQlB,EAAOC,MAAOA,EAAOG,iBAAkBF,QAMnD5B,YAEfA,EAAK6C,UAAY,CACf9B,YAAa+B,IAAUC,MAAM,CAC3B7B,KAAM4B,IAAUE,OAChB/B,KAAM6B,IAAUE,SACfC,WACHnC,KAAMgC,IAAUE,OAAOC,YAGlB,IAAMC,EAAK","file":"component---src-templates-post-jsx-0a33af7691302876306c.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport Img from 'gatsby-image';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Container, Content, Footer } from 'layouts';\r\nimport { TagsBlock, Header, SEO, SmallImage, OrderForm } from 'components';\r\nimport '../styles/prism';\r\n\r\nconst SuggestionBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  background: ${props => props.theme.colors.white.light};\r\n  box-shadow: ${props => props.theme.shadow.suggestion};\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 63px;\r\n`;\r\n\r\nconst PostSuggestion = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 3rem 0 3rem;\r\n`;\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { next, prev } = pageContext;\r\n  const post = data.markdownRemark;\r\n  const image = post.frontmatter.cover.childImageSharp.fluid;\r\n  const imageSrc = post.frontmatter.cover;\r\n  const title = post.frontmatter.title;\r\n  const price = post.frontmatter.price;\r\n  const sortOrder = post.frontmatter.sortOrder;\r\n  const carry = post.frontmatter.isCarryAvailable;\r\n  const html = post.html;\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={title}\r\n        description={post.frontmatter.description || post.excerpt || ' '}\r\n        image={image}\r\n        pathname={post.frontmatter.path}\r\n        sortOrder={post.frontmatter.sortOrder}\r\n        article\r\n      />\r\n      <Header title={title} price={price} cover={image} carryPrice={price * 1.5}/>\r\n      <Container>\r\n        <div className=\"\">\r\n          <SmallImage src={imageSrc} />\r\n        </div>\r\n        <div>\r\n          <Content input={html} />\r\n        </div>\r\n        <OrderForm weapon={title} price={price} isCarryAvailable={carry}/>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nPost.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    prev: PropTypes.object,\r\n    next: PropTypes.object,\r\n  }).isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        price\r\n        sortOrder\r\n        title\r\n        tags\r\n        isCarryAvailable\r\n        cover {\r\n          childImageSharp {\r\n            fluid(\r\n              maxWidth: 1920\r\n              quality: 90\r\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\r\n            ) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n            resize(width: 1200, quality: 90) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}